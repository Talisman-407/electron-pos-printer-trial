name: Build, Package and Publish

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags

jobs:
  package-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Package Electron app for Windows
        run: npx electron-forge make --platform=win32

      - name: Upload Package Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package-windows
          path: out/make

      - name: Publish to GitHub
        run: npx electron-forge publish --platform=win32
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF: ${{ github.ref }}

  
  package-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Create virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install setuptools distutils

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          npm install
          npm install --save-dev appdmg

      - name: Package Electron app for macOS
        run: |
          source venv/bin/activate
          npx electron-forge make --platform=darwin

      - name: Upload Package Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package-macos
          path: out/make

      - name: Publish to GitHub
        run: |
          source venv/bin/activate
          npm run publish -- --platform=darwin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  package-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Package Electron app for Linux
        run: npx electron-forge make --platform=linux

      - name: Upload Package Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package-linux
          path: out/make

      - name: Publish to GitHub
        run: npx electron-forge publish --platform=linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          GITHUB_REF: ${{ github.ref }}
