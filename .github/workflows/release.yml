name: Build and Package Electron App

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags

jobs:
  package-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
          path: dist/

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Package Electron app for Windows
        run: npx electron-forge make --platform=win32

      - name: Upload Package Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: package-windows
          path: out/make

      - name: Publish to GitHub
        run: npm run publish -- --platform=win32
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
          path: dist/

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Package Electron app for macOS
        run: npx electron-forge make --platform=darwin

      - name: Upload Package Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: package-macos
          path: out/make

      - name: Publish to GitHub
        run: npm run publish -- --platform=darwin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
          path: dist/

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Package Electron app for Linux
        run: npx electron-forge make --platform=linux

      - name: Upload Package Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: package-linux
          path: out/make

      - name: Publish to GitHub
        run: npm run publish -- --platform=linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
